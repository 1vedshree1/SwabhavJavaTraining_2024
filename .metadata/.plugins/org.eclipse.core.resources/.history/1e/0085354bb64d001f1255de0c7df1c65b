package com.techlabs.test;

import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Test {
	public static void main(String[] args) {
		
		List<Integer> numbers = Arrays.asList(20,25,30,35,40,45,50);
		
//		Stream<Integer> numbreStream = numbers.stream();
		numbers.stream()
		.forEach((number)->System.out.println(number));
		
		System.out.println("Odd Numbers");
		numbers.stream().filter((number)->(number%2!=0))
		                .forEach((number)->System.out.println(number));
		
		System.out.println("Odd Numbers greater than 35");
		
		List<Integer> filteredNumbers = numbers.stream().filter((number)->(number%2!=0))
						.filter((number)->(number>35))
		                .collect(Collectors.toList());
		System.out.println(filteredNumbers);
		//Map Funciton
		List<Integer> squareNumbers = numbers.stream()
				.map((number)->number*number)
				.collect(Collectors.toList());
		System.out.println("Squares: "+squareNumbers);
		//Reduce function		
		int sum = numbers.stream().reduce(0, (number1,number2)->number1+number2);
		System.out.println("Sum: "+sum);
		
		//Sorting
		System.out.println("Ascending");
		numbers.stream()
		.sorted()
		.forEach((number)->System.out.println(number));
		System.out.println("Descending");
		numbers.stream()
		.sorted(Comparator.reverseOrder())
		.forEach((number)->System.out.println(number));
		//Limit 
		System.out.println("Ascending");
		numbers.stream()
		.sorted()
		.limit(3)
		.forEach((number)->System.out.println(number));
		//Maxium and Minimum
		
		Optional<Integer> max = numbers.stream().max((number1,number2)->number1-number2);
		if(max.isPresent())
			System.out.println("max is: "+max.get());
		
		Optional<Integer> min = numbers.stream().min((number1,number2)->number1-number2);
		if(min.isPresent())
			System.out.println("min is: "+min.get());
		
				
	}

}
